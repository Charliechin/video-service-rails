.step(data-title='Customer Service with Twilio Video')
  :markdown
    ## Customer Service with Twilio Video

    In this tutorial, we'll dive into the code necessary to implement in-context customer support with Twilio Video. In this demo application, a customer will request live video support while viewing a product page on our website. In a separate "support agent" UI, we will display all current requests for support, and allow our agents to reach out directly and assist our customers.

  p.
    Sound like fun? Let's figure out how it works! Click the <i class="fa fa-fw fa-play"></i> button above to move on to the next step of the tutorial.

.step(data-title='About This Application', data-file='package.json', 
  data-highlight='27-41')
  :markdown
    ## About This Application

    This web application was built with [Ruby on Rails](http://www.rubyonrails.org), along with a few other useful open source components. We'll also be using Twilio's Ruby gem, as well as the Twilio JavaScript SDK in the browser.

    ### Run It Now

    Want to run it yourself right now? Deploy this app to your Heroku account using the button below:

    [![Deploy](https://www.herokucdn.com/deploy/button.png)](https://heroku.com/deploy?template=https://github.com/TwilioDevEd/video-service-rails)

    Now that we have a better sense of what's in the box, let's move on to building the customer-facing portion of this application. 

